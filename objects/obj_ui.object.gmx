<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stores combat text
globalvar combatStrings;
globalvar logIndex;
logIndex = 0;
globalvar logSize;
padding = 20;
logSize = 0;
combatStrings = ds_list_create();
addToLog("Welcome to the dungeon.");
addToLog("Kill enemies, find loot and try not to die.");
addToLog("Tap the potion to drink, and the armor");
addToLog("icons to see your inventory.");
addToLog("Good luck, Hero!");
draw_set_font(fnt_8bit);

//UI for armor
//Helm
//instance_create(view_xview[1]+80, view_yview[1]+250, obj_indent);
instance_create(view_xview[1]+95, view_yview[1]+250, obj_helm);
//Chest
//instance_create(view_xview[1]+80, view_yview[1]+282, obj_indent);
instance_create(view_xview[1]+95, view_yview[1]+314, obj_chest);
//Weapon
//instance_create(view_xview[1]+48, view_yview[1]+282, obj_indent);
instance_create(view_xview[1]+31, view_yview[1]+314, obj_wep);
//Shield
//instance_create(view_xview[1]+112, view_yview[1]+282, obj_indent);
instance_create(view_xview[1]+159, view_yview[1]+314, obj_shield);

instance_create(view_xview[1]+36, view_yview[1]+442, obj_healthPotUI);

//Log navigation arrows
instance_create(view_xview[2]+400,view_yview[2]+20, obj_up_button);
instance_create(view_xview[2]+400,view_yview[2]+75, obj_down_button);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_blue);

//Right panel
//draw_rectangle(896,0,1088,512,false);
//Bototm panel
//draw_rectangle(0,512,1088,608,false);

draw_set_color(c_black);
draw_text(view_xport[1]+padding, view_yport[1]+padding, "Health: ");
if (health / maxHealth &gt; 0.8)
    draw_set_color(c_green);
else if (health / maxHealth &gt; 0.5)
    draw_set_color(c_orange);
else
    draw_set_color(c_red);
draw_text(view_xport[1]+89, view_yport[1]+padding, health);

draw_set_color(c_black);
draw_text(view_xport[1]+padding, view_yport[1]+padding*2, "EXP: ");
draw_text(view_xport[1]+63, view_yport[1]+padding*2, obj_player.experience);

draw_text(view_xport[1]+padding, view_yport[1]+padding*3.5, "STR: ");
draw_text(view_xport[1]+63, view_yport[1]+padding*3.5, obj_player.strength);
draw_text(view_xport[1]+padding, view_yport[1]+padding*4.5, "INT: ");
draw_text(view_xport[1]+63, view_yport[1]+padding*4.5, obj_player.intelligence);
draw_text(view_xport[1]+padding, view_yport[1]+padding*5.5, "DEX: ");
draw_text(view_xport[1]+63, view_yport[1]+padding*5.5, obj_player.dexterity);

draw_text(view_xport[1]+padding, view_yport[1]+padding*7, "ARMOR: ");
draw_text(view_xport[1]+83, view_yport[1]+padding*7, obj_player.armor);

draw_text(view_xport[1]+padding, view_yport[1]+padding*8.5, "ATK: ");
draw_text(view_xport[1]+63, view_yport[1]+padding*8.5, obj_player.attackDamage);

draw_text(view_xport[1]+padding, view_yport[1]+padding*9.5, "GOLD: ");
draw_text(view_xport[1]+73, view_yport[1]+padding*9.5, obj_player.gold);

draw_text(view_xport[1]+33, view_yport[1]+440, ds_map_find_value(inventory, "healthPot"));

//Log display
if (logSize &gt; 0) {
   draw_set_color(c_black);
   for (x = logIndex; x &lt; logIndex + 5; x++) {
       draw_text(5, 515+(x-logIndex)*18, ds_list_find_value(combatStrings, x));
   }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
